{"version":3,"sources":["pages/loginPage.js","conponents/Navbar.js","pages/GuestHomePage.js","conponents/PreviewCard.js","pages/UserHomePage.js","pages/F-Card.js","conponents/ECards.js","conponents/FCards.js","pages/E-card.js","pages/AllCards.js","pages/NewEcard.js","pages/NewFcard.js","pages/SignUp.js","conponents/UserCard.js","pages/UsersList.js","App.js","serviceWorker.js","index.js"],"names":["LoginPage","props","state","emailInput","pwdInput","showInvalidCredentials","redirectToRecipes","login","bind","console","log","users","this","handleLogin","userFound","find","user","email","pwd","setState","to","className","class","for","type","id","placeholder","value","onChange","e","target","onClick","Component","Navbar","activeUser","handleLogout","recipesMenuItem","href","loginMenuItem","signupMenuItem","logoutMenuItem","expand","Brand","Toggle","aria-controls","Collapse","Nav","GuestHomePage","PreviewCard","data","src","img","fname","lname","location","date","description","UserHomePage","handleCard","handleToAllCards","cardRoute","event","ECards","filter","status","map","i","key","selected","disabled","hidden","FCardPage","RedirectToNewFCard","handleInput","handleImage","firstname","lastname","phone","from","feedingTime","numberOfCats","text","photo","name","files","URL","createObjectURL","ftname","updateNewFcard","FCards","ECardPage","RedirectToNewECard","catType","catAge","updateNewEcard","rows","maxlength","AllCards","eCardsList","fCardsList","eCardsJson","card","fCardsJson","onECardSelect","onFCardSelect","NewECard","radioInput","React","createRef","current","newECardData","handleStatus","alt","ref","defaultChecked","NewFCard","newFCardData","SignUp","handleSignUpSubmit","updateUserCards","history","push","withRouter","UserCard","UsersList","userCards","searchText","searchTypeRadio","handleSearch","handleRadio","str","usersJson","toLowerCase","includes","App","jasonUsers","route","ECardIndex","FCardIndex","handleStatusEcard","handleStatusFcard","temp","length","tempArr","forEach","cardItem","index","indexOf","exact","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b5b40ee8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './loginPage.css'\r\nimport { Redirect, Link } from 'react-router-dom';\r\n\r\n\r\nclass LoginPage extends Component {\r\n\r\nconstructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n        emailInput: \"\",\r\n        pwdInput: \"\",\r\n        showInvalidCredentials: false,\r\n        redirectToRecipes: false\r\n    }\r\n\r\n    this.login = this.login.bind(this);\r\n\r\n    console.log(this.props.users);\r\n}\r\n\r\nlogin() {\r\n    const {emailInput, pwdInput} = this.state;\r\n    const {users, handleLogin} = this.props\r\n\r\nconst userFound = users.find(user => emailInput === user.email && pwdInput === user.pwd)\r\n\r\nif (userFound) {\r\n    handleLogin(userFound);\r\n    this.setState ({\r\n        redirectToRecipes: true\r\n    })\r\n    // alert(\"found\");\r\n\r\n} else  {\r\n    this.setState({\r\n        showInvalidCredentials:true\r\n    })\r\n    // alert(\"not found\");\r\n}\r\n\r\n    // alert(emailInput + \" \" + pwdInput)\r\n}\r\n\r\n    render() {\r\n\r\nconst {emailInput, pwdInput, showInvalidCredentials, redirectToRecipes} = this.state\r\n\r\nif (redirectToRecipes) {\r\n    return <Redirect to=\"/home\"/>\r\n}\r\n\r\n        return (\r\n\r\n            <div className=\"login-wrapper\">\r\n            <div className=\"login-container\">\r\n                <h2>Login to Street Cat</h2>\r\n                <div>or<Link to ='/signup'> Create a new account</Link></div>\r\n\r\n                <form className=\"loginForm\">\r\n\r\n                {showInvalidCredentials ? <div class=\"alert\">\r\n                \r\n                    <div>Incorrect email or password!</div>\r\n                </div> : null}\r\n\r\n\r\n                    <div className=\"login-inp-container\">\r\n                        <label for=\"exampleInputEmail1\">Email address</label>\r\n                        <input type=\"text\" id=\"exampleInputEmail1\" placeholder=\"example@gmail.com\" value={emailInput} onChange={(e) => this.setState({emailInput: e.target.value, showInvalidCredentials: false})}/>\r\n                    </div>\r\n                    <div className=\"login-inp-container\">\r\n                        <label for=\"exampleInputPassword1\">Password</label>\r\n                        <input type=\"password\" id=\"exampleInputPassword1\" placeholder=\"******\" value={pwdInput} onChange={(e) => this.setState({pwdInput: e.target.value})}/>\r\n                    </div>\r\n                    {/* <label for=\"exampleInputFile\">File input</label>\r\n                    <input type=\"file\" id=\"exampleInputFile\"/>\r\n                    <input type=\"checkbox\" id=\"CheckMe\"/>\r\n                    <label for=\"CheckMe\">I agree to receive information about Canonical’s products and services.</label> */}\r\n                    <div >\r\n                        <button className=\"login-btn\" onClick={this.login}type=\"button\">Log in</button>\r\n                    </div>\r\n                </form>\r\n                \r\n            </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginPage;","import React, { Component } from 'react';\r\nimport './Navbar.css'\r\nimport { Navbar as BSNavbar, Nav, NavDropdown, Form, FormControl, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Navbar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        console.log(this.props.activeUser);\r\n    }\r\n    \r\n\r\n\r\n    render() {\r\n\r\n        const {activeUser, handleLogout} = this.props;\r\n\r\n        const recipesMenuItem = activeUser ? <li><a href=\"#cards\">Cards</a></li> : null;\r\n        const loginMenuItem = !activeUser ? <li className=\"right\"><a href=\"#login\">Login</a></li> : null;\r\n        const signupMenuItem = !activeUser ? <li className=\"right\"><a href=\"#signup\">Sighup</a></li> : null;\r\n        // const logoutMenuItem = activeUser ? <li className=\"right\"><a href=\"#login\">Logout</a></li> : null;\r\n        const logoutMenuItem = activeUser ? <li className=\"right\"><a onClick={() => {handleLogout()}} href=\"#\">Logout</a></li> : null;\r\n\r\n\r\n        return (\r\n\r\n            <BSNavbar className='navbar-main' expand=\"lg\">\r\n                <BSNavbar.Brand href=\"#/\">Street Cat</BSNavbar.Brand>\r\n                <BSNavbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <BSNavbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto justify-content-end\">\r\n                        {recipesMenuItem}\r\n                    </Nav>\r\n                    <Nav className=\"ml-auto justify-content-end\">\r\n                        {loginMenuItem} </Nav>\r\n                     <Nav>   {signupMenuItem}\r\n                        {logoutMenuItem}\r\n                    </Nav>\r\n                </BSNavbar.Collapse>\r\n            </BSNavbar>\r\n\r\n\r\n            // <div className=\"new-navbar\">\r\n            //     <ul className=\"topnav\">\r\n            //         <li>\r\n            //             <Link  className=\"active\" to=\"/\">\r\n            //                 <a>Cat App</a>\r\n            //             </Link>\r\n            //         </li>\r\n                   \r\n            //         {recipesMenuItem}\r\n            //         {loginMenuItem}\r\n            //         {signupMenuItem}\r\n            //         {logoutMenuItem}\r\n                       \r\n            //     </ul>\r\n            // </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n\r\n","\r\n\r\nimport React, { Component } from 'react';\r\nimport Navbar from '../conponents/Navbar';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport './GuestHomePage.css'\r\n\r\n\r\n\r\n\r\nclass GuestHomePage extends Component {\r\n\r\nconstructor(props) {\r\n    super(props);\r\n    \r\n}\r\n\r\n\r\n    render() {\r\n        const {activeUser, handleLogout} = this.props;\r\n        if(!activeUser){\r\n\r\n            return (\r\n                <div >\r\n                    <Navbar activeUser={activeUser} handleLogout={handleLogout}/>\r\n\r\n                    <div className=\"test\">\r\n                    <div className=\"GuestHomePage\">\r\n                        <h1>STREET CAT</h1>\r\n                       \r\n                        <Link to ='/signup'>\r\n                        <button >Join Us</button>\r\n                        </Link>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n            return <Redirect to='/home'/>\r\n        \r\n    }\r\n}\r\n\r\nexport default GuestHomePage;","import React, { Component } from 'react';\r\nimport './PreviewCard.css'\r\n\r\nclass PreviewCard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n       \r\n        }\r\n\r\n    render() {\r\n        const {data}=this.props;\r\n        // this.props.data\r\n        return (\r\n            \r\n\r\n            <div className=\"preview-card\">\r\n                <div>\r\n                    <img src={data.img}/>\r\n                </div>\r\n                <div>\r\n                    <h3>{data.type}</h3>\r\n                    <p>Name: {data.fname} {data.lname}</p>\r\n                    <p>Location: {data.location} </p>\r\n                    <p>Date: {data.date} </p>\r\n                    <p> {data.description}</p> \r\n                </div>\r\n            \r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default PreviewCard;\r\n\r\n","import React, { Component } from 'react';\r\nimport Navbar from '../conponents/Navbar';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport PreviewCard from '../conponents/PreviewCard';\r\nimport eCardsJson from '../data/eCards.json'\r\nimport './UserHomePage.css'\r\n\r\nclass UserHomePage extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleCard=this.handleCard.bind(this)\r\n        this.handleToAllCards =this.handleToAllCards.bind(this)\r\n        this.state ={\r\n            cardRoute:\"\",\r\n          \r\n        }\r\n        \r\n    }\r\n    handleCard(event){\r\n\r\n        this.setState({...this.state,cardRoute:event.target.value})\r\n       \r\n    }\r\n    handleToAllCards(){\r\n        this.setState({...this.state,cardRoute:'allCards'})\r\n    }\r\n \r\n    render() {\r\n        const {activeUser, handleLogout,ECards} = this.props;\r\n\r\n        if (!activeUser) {\r\n            return <Redirect to=\"/\"/>\r\n        }\r\n       \r\n        switch (this.state.cardRoute) {\r\n            case \"E\":\r\n                return <Redirect to='/e-card'/>\r\n            case \"F\":\r\n                return <Redirect to='/f-card'/>\r\n            case 'allCards':\r\n                return <Redirect to ='/cards'/>\r\n            default:\r\n                break;\r\n        }\r\n        return (\r\n            <div >\r\n                <Navbar activeUser={activeUser} handleLogout={handleLogout}/>\r\n                <div className=\"user-home-container\">\r\n\r\n                    <div className=\"PreviewCards\">\r\n\r\n                        {/* This is the cards dron the eCardJason: */}\r\n                        {/* { \r\n                        eCardsJson.map(data=>{\r\n                            return <PreviewCard key={data.id} data ={data}/>\r\n                            })\r\n                        } */}\r\n\r\n\r\n                        {ECards.filter(data=>data.status==='open').map((data,i)=>{\r\n                            return <PreviewCard key={i} data={data} />\r\n                        })\r\n                        }\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                    <button className='all-cards-btn' onClick={this.handleToAllCards}>All Cards</button>\r\n                    \r\n\r\n                    <div className=\"two-btn\">\r\n                       \r\n                    <select id = \"new-card\" className=\"new-card-btn\" onChange={this.handleCard}>\r\n                        <option selected disabled hidden >Open a New card</option>\r\n                        <option value=\"E\">Trap a Cat</option>\r\n                        <option value=\"F\">Shift Change in Feeding Station</option>\r\n                        <option value=\"G\">Foster Home Needed</option>\r\n                        <option value=\"H\">Medicine Needed</option>\r\n                        <option value=\"I\">Equipment Needed</option>\r\n                        <option value=\"J\">Other</option>\r\n                        </select>\r\n\r\n                        <Link to ='/users-list' className=\"link\">\r\n                        <button className=\"user-list-btn\">Users List</button>\r\n                        </Link>\r\n\r\n\r\n                        \r\n                        \r\n                       \r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserHomePage;","import React, { Component } from 'react';\r\nimport Navbar from '../conponents/Navbar';\r\nimport { Redirect } from 'react-router-dom';\r\nimport './F-card.css'\r\n\r\nclass FCardPage extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.RedirectToNewFCard=this.RedirectToNewFCard.bind(this)\r\n        this.handleInput=this.handleInput.bind(this)\r\n        this.handleImage=this.handleImage.bind(this)\r\n        this.state ={\r\n            cardRoute:'',\r\n            type:'',\r\n            firstname:'',\r\n            lastname:'',\r\n            location:'',\r\n            phone:'',\r\n            from:'',\r\n            to:'',\r\n            feedingTime:'',\r\n            numberOfCats:'',\r\n            text:'',\r\n            photo:'',\r\n            status:'open'\r\n        }\r\n    }\r\n    handleInput(event){\r\n        console.log(event.target.value)\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n    }\r\n    handleImage(event){\r\n        if (event.target.files && event.target.files[0]) {\r\n            this.setState({\r\n              photo: URL.createObjectURL(event.target.files[0])\r\n            });\r\n          }\r\n    }\r\n\r\n    RedirectToNewFCard(){\r\n        //function to callect all the data we entered\r\n        const data ={\r\n            type:this.state.type,\r\n            ftname:this.state.firstname,\r\n            lname:this.state.lastname,\r\n            location:this.state.location,\r\n            phone:this.state.phone,\r\n            from:this.state.from,\r\n            to:this.state.to,\r\n            'feeding-time':this.state.feedingTime,\r\n            'number-of-cats':this.state.numberOfCats,\r\n            text:this.state.text,\r\n            img:this.state.photo,\r\n            status:this.state.status,\r\n        \r\n        }\r\n        this.props.updateNewFcard(data)\r\n       this.setState({...this.state,cardRoute:'newFCard'})\r\n    }\r\n\r\n\r\n    render() {\r\n        const {activeUser, handleLogout} = this.props;\r\n        switch (this.state.cardRoute) {\r\n            case 'newFCard':\r\n                return <Redirect to ='/new-f-card'/>\r\n            default:\r\n                break;\r\n        }\r\n        if (!activeUser) {\r\n            return <Redirect to=\"/\"/>\r\n        }\r\n        return (\r\n            <div id=\"fcard\">\r\n                 <Navbar activeUser={activeUser} handleLogout={handleLogout}/>\r\n    \r\n\r\n               <div className=\"f-wrapper\">\r\n               \r\n                  \r\n                        <div className=\"contact-form\">\r\n                        <div className=\"form-title2\"><h3>Shift Change in Feeding station</h3></div>\r\n                        <div className=\"fcard-main\">\r\n                            <div className=\"input-fields\">\r\n                                <label for=\"other\">First Name</label> \r\n                                <input type=\"text\" className=\"input\" placeholder=\"\"onChange={this.handleInput} name='firstname'/>\r\n                                <label for=\"other\">Last Name</label> \r\n                                <input type=\"text\" className=\"input\" placeholder=\"\"onChange={this.handleInput} name='lastname'/>\r\n                                <label for=\"other\">Location</label> \r\n                                <input type=\"text\" className=\"input\" placeholder=\"\"onChange={this.handleInput} name='location'/>\r\n                                <label for=\"other\">Phone</label> \r\n                                <input type=\"text\" className=\"input\" placeholder=\"\"onChange={this.handleInput} name='phone'/>\r\n                                <label for=\"other\">From</label> \r\n                                <input type=\"date\" className=\"input\" placeholder=\"\"onChange={this.handleInput} name='from'/>\r\n                                <label for=\"other\">To</label> \r\n                                <input type=\"date\" className=\"input\" placeholder=\"\"onChange={this.handleInput} name=\"to\"/>\r\n                                <label for=\"other\">Feeding Time</label> \r\n                                <input type=\"time\" className=\"input\" placeholder=\"\"onChange={this.handleInput} name='feedingTime'/>\r\n                                <label for=\"other\">Number of cats</label> \r\n                                <input type=\"text\" className=\"input\" placeholder=\"\"onChange={this.handleInput} name='numberOfCats'/>\r\n                            </div>\r\n\r\n                            <div className=\"msg\">\r\n                                    <label for=\"other\">Enter your msg</label> \r\n                                <textarea placeholder=\"Enter your msg here...\" name='text' onChange={this.handleInput}></textarea>\r\n                                    <div >\r\n                                        <label  for=\"exampleInputFile\">Add Photo</label>\r\n                                        <input type=\"file\" id=\"InputFile2\" onChange={this.handleImage}/>\r\n                                    </div>\r\n                                {/* <div className=\"btn\">Send</div> */}\r\n                                <button className=\"f-btn\" onClick={this.RedirectToNewFCard}>Send</button>\r\n\r\n                            </div>\r\n                            </div>\r\n                   </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FCardPage;","import React, { Component } from 'react';\r\nimport './ECards.css'\r\n\r\nclass ECards extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n       \r\n        }\r\n\r\n    render() {\r\n        const {data}=this.props;\r\n        // this.props.data\r\n        return (\r\n            \r\n            // <div className=\"e-card-wrapper\" >\r\n                <div className=\"ecards-container\" {...this.props}>\r\n                    <div className=\"ecard-card\">\r\n                        <div className=\"imgBx\">\r\n                            <img src={data.img}/>\r\n                        </div>\r\n                        <div className=\"ecard-content\">\r\n                            <h3>{data.type}</h3>\r\n                            <p>Name: {data.fname} {data.lname}</p>\r\n                            <p>Location: {data.location} </p>\r\n                            <p>Date: {data.date} </p>\r\n                            <p>Cat Age:{data[\"cat-age\"]}</p>\r\n                            <p>Cat Type:{data[\"cat-type\"]}</p>\r\n                            <p>Card status:{data.status}</p>\r\n                            <p>Phone:{data.phone}</p>\r\n                            <p> {data.text}</p> \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                  \r\n            // </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default ECards;\r\n\r\n","import React, { Component } from 'react';\r\nimport './FCards.css'\r\n\r\nclass FCards extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n       \r\n        }\r\n\r\n    render() {\r\n        const {data}=this.props;\r\n        // this.props.data\r\n        return (\r\n            \r\n            <div className=\"f-card-wrapper\" {...this.props}>\r\n                <div className=\"fcards-container\">\r\n                    <div className=\"fcard-card\">\r\n                        <div className=\"imgBx\">\r\n                            <img src={data.img}/>\r\n                        </div>\r\n                        <div className=\"fcard-content\">\r\n                            <h3>{data.type}</h3>\r\n                            <p>Name: {data.fname} {data.lname}</p>\r\n                            <p>Location: {data.location} </p>\r\n                            <p>From: {data.from} </p>\r\n                            <p>To: {data.to} </p>\r\n                            <p>Feeding Time:{data[\"feeding-time\"]}</p>\r\n                            <p>Number of Cats:{data[\"number-of-cats\"]}</p>\r\n                            <p>Phone:{data.phone}</p>\r\n                            <p> {data.text}</p> \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                  \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default FCards;\r\n\r\n","import React, { Component } from 'react';\r\nimport Navbar from '../conponents/Navbar';\r\nimport { Redirect } from 'react-router-dom';\r\nimport './E-card.css'\r\n\r\n\r\nclass ECardPage extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.RedirectToNewECard=this.RedirectToNewECard.bind(this)\r\n        this.handleInput=this.handleInput.bind(this)\r\n        this.handleImage=this.handleImage.bind(this)\r\n        this.state ={\r\n            cardRoute:'',\r\n            firstname:'',\r\n            lastname:'',\r\n            location:'',\r\n            phone:'',\r\n            date:'',\r\n            description:'',\r\n            catType:'',\r\n            catAge:'',\r\n            photo:'',\r\n            status:'open'\r\n        }\r\n    }\r\n\r\n    handleInput(event){\r\n        console.log(event.target.value)\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n    }\r\n    handleImage(event){\r\n        if (event.target.files && event.target.files[0]) {\r\n            this.setState({\r\n              photo: URL.createObjectURL(event.target.files[0])\r\n            });\r\n          }\r\n    }\r\n\r\n    RedirectToNewECard(){\r\n        //function to callect all the data we entered\r\n        const data ={\r\n            ftname:this.state.firstname,\r\n            lname:this.state.lastname,\r\n            location:this.state.location,\r\n            phone:this.state.phone,\r\n            date:this.state.date,\r\n            description:this.state.description,\r\n            'cat-age':this.state.catAge,\r\n            \"cat-type\":this.state.catType,\r\n            img:this.state.photo,\r\n            status:this.state.status\r\n        }\r\n        this.props.updateNewEcard(data)\r\n       this.setState({...this.state,cardRoute:'newECard'})\r\n    }\r\n    render() {\r\n        const {activeUser, handleLogout} = this.props;\r\n        switch (this.state.cardRoute) {\r\n            case 'newECard':\r\n                return <Redirect to ='/new-e-card'/>\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (!activeUser) {\r\n            return <Redirect to=\"/\"/>\r\n        }\r\n        return (\r\n            <div>\r\n                 <Navbar activeUser={activeUser} handleLogout={handleLogout}/>\r\n                <div>\r\n                    <div className=\"form-title\"><h1>E-card form</h1></div>\r\n                    <div className=\"main\">\r\n\r\n                        <form>\r\n\r\n                            <div className=\"info\">\r\n                                <h2 >First Name</h2>\r\n                                <input type=\"rext\" name=\"firstname\" onChange={this.handleInput}/>\r\n\r\n                                <h2 >Last Name</h2>\r\n                                <input type=\"rext\" name=\"lastname\"onChange={this.handleInput}/>\r\n\r\n                                <h2 >Location</h2>\r\n                                <input type=\"text\" name=\"location\" onChange={this.handleInput}/>\r\n\r\n                                {/* <h2 >Email</h2>\r\n                                <input type=\"email\" name=\"email\"/> */}\r\n\r\n                                <h2 >Phone</h2>\r\n                                <input type=\"numper\" name=\"phone\" onChange={this.handleInput}/>\r\n\r\n                                <h2 >Date</h2>\r\n                                <input type=\"date\" name=\"date\" onChange={this.handleInput}/>\r\n\r\n                                <h2 >Description</h2>\r\n                                <textarea id=\"description\" name='description' rows=\"5\" maxlength=\"370\" onChange={this.handleInput}></textarea>\r\n                                {/* <input id=\"description\" type=\"text\" name=\"description\"/> */}\r\n\r\n                            </div>\r\n\r\n                            <div className=\"radio-main\">\r\n                                <h2 className=\"cat-radio-Title\">Cat Age</h2>\r\n                                <div id='cat-age' className=\"cat-radio\" onChange={this.handleInput}>\r\n                                    <input type=\"radio\" id=\"adult\" name=\"catAge\" value=\"adult\"/>\r\n                                    <label for=\"male\">Adult</label>\r\n                                    <input type=\"radio\" id=\"kitten\" name=\"catAge\" value=\"kitten\"/>\r\n                                    <label for=\"female\">Kitten</label>\r\n                                    <input type=\"radio\" id=\"unknown\" name=\"catAge\" value=\"unknown\"/>\r\n                                    <label for=\"other\">Unknown</label> \r\n                                </div>\r\n\r\n                                <h2 className=\"cat-radio-Title\">Cat Type</h2>\r\n                                <div id='cat-type' className=\"cat-radio\" onChange={this.handleInput}>\r\n                                    <input type=\"radio\" id=\"Feral cat\" name=\"catType\" value=\"Feral cat\"/>\r\n                                    <label for=\"Feral cat\">Feral cat</label>\r\n                                    <input type=\"radio\" id=\"house cat\" name=\"catType\" value=\"house cat\"/>\r\n                                    <label for=\"house cat\">House cat</label>\r\n                                    <input type=\"radio\" id=\"unknown\" name=\"catType\" value=\"unknown\"/>\r\n                                    <label for=\"other\">Unknown</label> \r\n                                </div>\r\n                                <div className=\"add-file-main\">\r\n                                <label className=\"add-file\" for=\"exampleInputFile\">Add Photo</label>\r\n                                <input type=\"file\" id=\"InputFile\" name='photo' onChange={this.handleImage}/>\r\n                                </div>\r\n                            </div>\r\n\r\n                                \r\n                            \r\n                            <button className='btn-main' type=\"button\" onClick={this.RedirectToNewECard}>Send</button> \r\n\r\n                                {/* <h2 >Subject</h2>\r\n                            <select className=\"option\" name=\"subject\">\r\n                                <option disabled=\"disabled\" selected=\"selected\" value=\"\">Choose option</option>\r\n                                <option value=\"\">Subject 1</option>\r\n                                <option value=\"\">Subject 2</option>\r\n                                <option value=\"\">Subject 3</option>\r\n                            </select> */}\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ECardPage;","import React, { Component } from 'react';\r\nimport Navbar from '../conponents/Navbar';\r\nimport { Redirect } from 'react-router-dom';\r\nimport eCardsJson from '../data/eCards.json';\r\nimport ECards from '../conponents/ECards';\r\nimport FCards from '../conponents/FCards';\r\nimport fCardsJson from '../data/fCards.json'\r\nimport './AllCards.css'\r\nimport ECardPage from './E-card';\r\n\r\nclass AllCards extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n    }\r\n    \r\n    render() {\r\n        const {activeUser, handleLogout,ECards:eCardsList,FCards:fCardsList} = this.props;\r\n\r\n        // if (!activeUser) {\r\n        //     return <Redirect to=\"/\"/>\r\n        // }\r\n        \r\n        return (\r\n            <div>\r\n                <Navbar activeUser={activeUser} handleLogout={handleLogout}/>\r\n                {/* <div>\r\n                All Cards Page\r\n                </div> */}\r\n                <div className =\"cards-container\">\r\n                    {\r\n                        eCardsJson.map(card =>{\r\n                           return <ECards key={card.id} data={card}  /> \r\n                        })\r\n                    }\r\n                     {\r\n                        fCardsJson.map(card =>{\r\n                           return <FCards key={card.id} data={card}  /> \r\n                        })\r\n                    }\r\n                    {\r\n                        eCardsList.map((card,i)=>{\r\n                            return <ECards key={card.name+i} data={card} onClick={()=>this.props.onECardSelect(card)}/>\r\n                        })\r\n                    }\r\n                    {\r\n                        fCardsList.map((card,i)=>{\r\n                            return <FCards key={card.name+i} data={card} onClick={()=>this.props.onFCardSelect(card)}/>\r\n                        })\r\n                    }\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AllCards;","import React, { Component } from 'react';\r\nimport './NewEcard.css'\r\nimport { Redirect } from 'react-router-dom';\r\nimport Navbar from '../conponents/Navbar';\r\nclass NewECard extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.radioInput=React.createRef()\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log(this.radioInput.current.value)\r\n    }\r\n    render() {\r\n        const {activeUser, handleLogout,newECardData,handleStatus} = this.props;\r\n        console.log(this.props)\r\n        if(!newECardData){\r\n            return <Redirect to='/e-card'/>\r\n                }\r\n\r\n        return (\r\n\r\n            <div>\r\n                <Navbar activeUser={activeUser} handleLogout={handleLogout}/>\r\n                <div className='newEContainer'>\r\n            <div className=\"new-e-card-container\">\r\n                <div className='new-e-first-col'>\r\n                    <label>Name: {newECardData.ftname}</label> \r\n                    <label>Name: {newECardData.lname}</label>  \r\n                    <label>Name:{newECardData.location}</label>\r\n                    <label>Name:{newECardData.phone}</label>\r\n                    <label>Name:{newECardData.date}</label>\r\n                    <label>Name:{newECardData.description}</label>\r\n                    <label>Cat Age: {newECardData['cat-age']}</label>\r\n                    <label> Cat Type: {newECardData['cat-type']} </label>\r\n                </div>\r\n               <div className='new-e-second-col'>\r\n                   <img src={newECardData.img} alt=\"image\"/>\r\n               </div>\r\n            </div>\r\n                <h3>Status</h3>\r\n                <div id=\"status\" onChange={(event)=>handleStatus(event.target.value,newECardData)} ref={this.radioInput}>\r\n                    <label>Open</label>\r\n                    <input type=\"radio\" name=\"status\" value='open' id=\"open\"  defaultChecked={newECardData.status==='open'} />\r\n                    <label >Active</label>\r\n                    <input type=\"radio\" name=\"status\" value='active' id=\"active\"  defaultChecked={newECardData.status==='active'} />\r\n                    <label>Closed</label>\r\n                    <input type=\"radio\" name=\"status\" value='closed' id=\"closed\"  defaultChecked={newECardData.status==='closed'} />\r\n                </div>\r\n            </div>\r\n            </div>\r\n           \r\n        );\r\n    }\r\n}\r\n\r\nexport default NewECard;","import React, { Component } from 'react';\r\nimport './NewFcard.css'\r\nimport { Redirect } from 'react-router-dom';\r\nimport Navbar from '../conponents/Navbar';\r\nclass NewFCard extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        const {activeUser, handleLogout,newFCardData,handleStatus} = this.props;\r\n        console.log(this.props)\r\n        if(!newFCardData){\r\n            return <Redirect to='/f-card'/>\r\n                }\r\n\r\n        return (\r\n            <div>\r\n             <Navbar activeUser={activeUser} handleLogout={handleLogout}/> \r\n             <div className='newFContainer'>\r\n            <div className=\"new-f-card-container\">\r\n                <div className='new-f-first-col'>\r\n                    <label>First Name: {newFCardData.ftname}</label> \r\n                    <label>last Name: {newFCardData.lname}</label>  \r\n                    <label>Location:{newFCardData.location}</label>\r\n                    <label>Phone:{newFCardData.phone}</label>\r\n                    <label>From:{newFCardData.from}</label>\r\n                    <label>To:{newFCardData.to}</label>\r\n                    <label>Feeding Time:{newFCardData['feeding-time']}</label>\r\n                    <label>Number of Cats:{newFCardData['number-of-cats']}</label>\r\n                    <label>Text:{newFCardData.text}</label>\r\n                </div>\r\n               <div className='new-f-second-col'>\r\n                   <img src={newFCardData.img} alt=\"image\"/>\r\n               </div>\r\n            </div>\r\n                <h3>Status</h3>\r\n                <div id=\"status\" onChange={(event)=>handleStatus(event.target.value,newFCardData)} ref={this.radioInput}>\r\n                    <label>Open</label>\r\n                    <input type=\"radio\" name=\"status\" value='open' defaultChecked={newFCardData.status==='open'} id=\"open\"/>\r\n                    <label >Active</label>\r\n                    <input type=\"radio\" name=\"status\" value='active' defaultChecked={newFCardData.status==='active' }id=\"active\"/>\r\n                    <label>Closed</label>\r\n                    <input type=\"radio\" name=\"status\" value='closed' defaultChecked={newFCardData.status==='closed'}id=\"closed\"/>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewFCard;","\r\n\r\nimport React, { Component } from 'react';\r\nimport './SignUp.css'\r\nimport { Redirect, Link, withRouter } from 'react-router-dom';\r\n\r\n\r\nclass SignUp extends Component {\r\nconstructor(props){\r\n    super(props)\r\n    this.state={\r\n        fname:'',\r\n        lname:'',\r\n        pwd:'',\r\n        img:'',\r\n        email:'',\r\n        type:'',\r\n        showInvalidCredentials: false,\r\n\r\n    }\r\n    this.handleInput=this.handleInput.bind(this)\r\n    this.handleImage=this.handleImage.bind(this)\r\n    this.handleSignUpSubmit=this.handleSignUpSubmit.bind(this)\r\n}\r\nhandleInput(event){\r\n    this.setState({\r\n        [event.target.name]:event.target.value\r\n    })\r\n    if(event.target.name=='type'){\r\n        console.log(\"type\",event.target.value)\r\n    }\r\n}\r\n\r\nhandleImage(event){\r\n    if (event.target.files && event.target.files[0]) {\r\n        this.setState({\r\n          img: URL.createObjectURL(event.target.files[0])\r\n        });\r\n      }\r\n}\r\n\r\nhandleSignUpSubmit(){\r\n    if(this.state.email=='' || this.state.pwd==''){\r\n        this.setState({showInvalidCredentials:true})\r\n    }else{\r\n        const data={\r\n           fname:this.state.fname,\r\n           lname:this.state.lname,\r\n           email:this.state.email,\r\n           pwd:this.state.pwd,\r\n           img:this.state.img,\r\n           type:this.state.type\r\n       }\r\n       this.props.updateUserCards(data)\r\n       this.props.history.push('/login')\r\n    }\r\n   \r\n}\r\n\r\n    render() {\r\n        const {activeUser}= this.props\r\n        if(activeUser){\r\n          return  <Redirect to ='/home'/>\r\n        }\r\n        return (\r\n           \r\n            <div className=\"signup-wrapper\">\r\n                    <div className=\"signup-container\">\r\n                        <h2>Sign Up</h2>\r\n                            {\r\n                                this.state.showInvalidCredentials ? <div className=\"alert\">\r\n                                <div>Please Enter email and password!</div>\r\n                                </div> : null\r\n                            }\r\n                        <div className=\"inp-container\">\r\n                            <label>First Name</label>\r\n                            <input name='fname' type=\"text\" onChange={this.handleInput}/>\r\n                        </div>\r\n                        <div className=\"inp-container\">\r\n                            <label>Last Name</label>\r\n                            <input name='lname' type=\"text\" onChange={this.handleInput}/>\r\n                        </div>\r\n                        <div className=\"inp-container\">\r\n                            <label>Email</label>\r\n                            <input name='email' type=\"email\" onChange={this.handleInput}/>\r\n                        </div>\r\n                        <div className=\"inp-container\">\r\n                            <label>Password</label>\r\n                            <input name='pwd' type=\"password\" onChange={this.handleInput}/>\r\n                        </div>\r\n                        <div className=\"inp-container\">\r\n                            <label>Image</label>\r\n                            <input className=\"img-input\" name='img' type=\"file\" onChange={this.handleImage}/>\r\n                        </div>\r\n\r\n                            <h5>Main Activity</h5>\r\n                            <div id='user-type' className=\"user-radio\" onChange={this.handleInput}>\r\n                                                <input type=\"radio\" id=\"feeder\" name=\"type\" value=\"feeder\"/>\r\n                                                <label for=\"Feral cat\">Cat-Feeder</label>\r\n                                                <input type=\"radio\" id=\"Cat-Catcher\" name=\"type\" value=\"Cat-Catcher\"/>\r\n                                                <label for=\"house cat\">Cat-Catcher</label>\r\n                                                <input type=\"radio\" id=\"Cat-carer\" name=\"type\" value=\"Cat-carer\"/>\r\n                                                <label for=\"other\">Cat-Foster</label> \r\n                                            </div>\r\n                           \r\n                                <button className=\"signup-btn\"  onClick={this.handleSignUpSubmit}>OK</button>\r\n                    </div>\r\n            </div>\r\n            \r\n           \r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SignUp);","import React, { Component } from 'react';\r\nimport './UserCard.css'\r\n\r\nclass UserCard extends Component {\r\n    render() {\r\n        const {user}=this.props\r\n        return (\r\n            <div className='user-card-container'>\r\n              <label>First Name: {user.fname}</label>  \r\n              <label>Last Name: {user.lname}</label>  \r\n              <label>E-Mail: {user.email}</label>  \r\n              <label>Type: {user.type}</label> \r\n              <div>\r\n                  <img src={user.img} alt=\"\"/>\r\n              </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserCard;","import React, { Component } from 'react';\r\nimport Navbar from '../conponents/Navbar';\r\nimport { Redirect } from 'react-router-dom';\r\nimport './UsersList.css'\r\nimport usersJson from '../data/users.json'\r\nimport UserCard from '../conponents/UserCard';\r\n\r\nclass UsersList extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            userCards:[],\r\n            searchText:'',\r\n            searchTypeRadio:null\r\n        }\r\n        this.handleSearch=this.handleSearch.bind(this)\r\n        this.handleRadio=this.handleRadio.bind(this)\r\n    }\r\n\r\n\r\n    handleSearch(event){\r\n        let str=event.target.value\r\n        this.setState({searchText:str})\r\n    }\r\n    handleRadio(event){\r\n        this.setState({searchTypeRadio:event.target.value})\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({userCards:[...usersJson,...this.props.userCards]},()=>{\r\n            console.log('userList state',this.state.userCards)\r\n        })\r\n    }\r\n    render() {\r\n        const {activeUser, handleLogout,userCards} = this.props;\r\n        console.log('userCards',userCards)\r\n\r\n        if (!activeUser) {\r\n            return <Redirect to=\"/\"/>\r\n        }\r\n        \r\n      \r\n        return (\r\n            <div>\r\n                <Navbar activeUser={activeUser} handleLogout={handleLogout}/>\r\n                <div className=\"user-list-main\">\r\n              \r\n                <div className=\"filter-user-list\">\r\n                    <input type=\"text\" onChange={this.handleSearch}/>\r\n                    <div className=\"user-radio-container\" onChange={this.handleRadio}>\r\n                        <label>Cat-Feeder</label>\r\n                        <input type=\"radio\" name=\"searchTypeRadio\" value='feeder' />\r\n                        <label>Cat-Catcher</label>\r\n                        <input type=\"radio\" name=\"searchTypeRadio\" value='Cat-Catcher'/>\r\n                        <label>Cat-Foster</label>\r\n                        <input type=\"radio\" name=\"searchTypeRadio\" value='Cat-carer'/>\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n\r\n\r\n                <div className =\"users-container\">\r\n                  {\r\n                     this.state.userCards.filter(user=>{\r\n                         if(user.fname.toLowerCase().includes(this.state.searchText.toLowerCase())){\r\n                            if(!this.state.searchTypeRadio){\r\n                                return true\r\n                            }\r\n                            if(( user.type===this.state.searchTypeRadio))\r\n                             return true\r\n                         }\r\n                         \r\n                     }).map((user,i)=>{\r\n                          return <UserCard key={user.fname+i} user={user}/>\r\n                      })\r\n                  }\r\n                {/*   {\r\n                      userCards.map((user,i)=>{\r\n                        return <UserCard key={user.name+i} user={user}/> \r\n                      })\r\n                  }  */}\r\n                </div>\r\n                \r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UsersList;","import React from 'react';\nimport './App.css';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport LoginPage from './pages/loginPage';\nimport GuestHomePage from './pages/GuestHomePage';\nimport jasonUsers from './data/users.json';\nimport UserHomePage from './pages/UserHomePage'\nimport FCardPage from './pages/F-Card';\nimport AllCards from './pages/AllCards';\nimport ECardPage from './pages/E-card';\nimport NewECard from './pages/NewEcard';\nimport NewFCard from './pages/NewFcard';\nimport SignUp from './pages/SignUp'\nimport UsersList from './pages/UsersList';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      activeUser: null,\n        // activeUser: {\n      //   id: 1234,\n      //   fname: \"John\",\n      //   lname: \"Doe\"\n      // }\n      users: jasonUsers,\n      route:\"\",\n      ECards:[],\n      FCards:[],\n      userCards:[],\n      ECardIndex:0,\n      FCardIndex:0\n    }\n\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.updateUserCards=this.updateUserCards.bind(this)\n\n    this.handleStatusEcard=this.handleStatusEcard.bind(this)\n    this.updateNewEcard=this.updateNewEcard.bind(this)\n    this.onECardSelect=this.onECardSelect.bind(this)\n\n    this.handleStatusFcard=this.handleStatusFcard.bind(this)\n    this.updateNewFcard=this.updateNewFcard.bind(this)\n    this.onFCardSelect=this.onFCardSelect.bind(this)\n  }\n\n  handleLogin(activeUser) {\n    this.setState({\n      activeUser: activeUser\n    })\n  }\n  \n  handleLogout() {\n    this.setState({\n      activeUser: null,\n      \n    })\n  }\n  updateUserCards(data){\n    const temp=[...this.state.userCards,data]\n    console.log(temp)\n    this.setState({userCards:temp,\n    users:[...this.state.users,...temp]\n    })\n  } \n  \n  /* For E cards */\n  updateNewEcard(data){\n       const  temp = [...this.state.ECards,data]\n      this.setState({ECards:temp,ECardIndex:temp.length-1})\n\n    }\n  handleStatusEcard(status,card){\n    let tempArr =[...this.state.ECards]\n    tempArr.forEach(cardItem=>{\n      if(card==cardItem){\n        cardItem.status=status\n      }\n    })\n    this.setState({ECards:tempArr})\n  }\n  \n\n  onECardSelect(card){\n    let index =this.state.ECards.indexOf(card)\n    this.setState({ECardIndex:index})\n    this.props.history.push('/new-e-card')\n  }\n\n  /* For F Cards */\n  updateNewFcard(data){\n    const  temp = [...this.state.FCards,data]\n   this.setState({FCards:temp,FCardIndex:temp.length-1})\n\n }\nhandleStatusFcard(status,card){\n let tempArr =[...this.state.FCards]\n tempArr.forEach(cardItem=>{\n   if(card==cardItem){\n     cardItem.status=status\n   }\n })\n this.setState({FCards:tempArr})\n}\n\n\nonFCardSelect(card){\n let index =this.state.FCards.indexOf(card)\n this.setState({FCardIndex:index})\n this.props.history.push('/new-f-card')\n}\n\n  render() {\n\n    const {activeUser, users} = this.state;\n\n    \n  return (\n    \n    \n  <div>\n   \n   \n    <Switch>\n      <Route exact path=\"/\">\n        <GuestHomePage activeUser={activeUser} handleLogout={this.handleLogout}/>\n      </Route>\n      <Route exact path=\"/home\">\n        <UserHomePage activeUser={activeUser} handleLogout={this.handleLogout} ECards={this.state.ECards}/>\n      </Route>\n      <Route exact path=\"/login\">\n        <LoginPage activeUser={activeUser} users={users} handleLogin={this.handleLogin}/>\n      </Route>    \n      <Route exact path=\"/cards\">\n        <AllCards activeUser={activeUser} handleLogout={this.handleLogout} ECards={this.state.ECards} onECardSelect={this.onECardSelect} FCards={this.state.FCards} onFCardSelect={this.onFCardSelect}/>\n      </Route>\n      <Route exact path=\"/e-card\">\n        <ECardPage activeUser={activeUser} handleLogout={this.handleLogout} updateNewEcard={this.updateNewEcard}/>\n      </Route>\n      <Route exact path=\"/f-card\">\n        <FCardPage activeUser={activeUser} handleLogout={this.handleLogout} updateNewFcard={this.updateNewFcard}/>\n      </Route>\n      <Route exact path=\"/new-e-card\">\n        <NewECard activeUser={activeUser} handleLogout={this.handleLogout} handleStatus={this.handleStatusEcard} newECardData={this.state.ECards[this.state.ECardIndex]}/>\n      </Route>\n      <Route exact path=\"/new-f-card\">\n        <NewFCard activeUser={activeUser} handleLogout={this.handleLogout} handleStatus={this.handleStatusFcard} newFCardData={this.state.FCards[this.state.FCardIndex]}/>\n      </Route>\n      <Route exact path=\"/users-list\">\n        <UsersList activeUser={activeUser} handleLogout={this.handleLogout} userCards={this.state.userCards}/>\n      </Route>\n      <Route exact path=\"/signup\">\n        <SignUp activeUser={activeUser} handleLogout={this.handleLogout} updateUserCards={this.updateUserCards}/>\n      </Route>\n    </Switch>\n  </div>\n    \n  );\n}\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n\n    <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}