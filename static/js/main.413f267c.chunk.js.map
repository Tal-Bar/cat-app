{"version":3,"sources":["components/PreviewCard.module.css","components/Navbar.js","pages/loginPage.js","pages/GuestHomePage.js","components/PreviewCard.js","pages/UserHomePage.js","pages/F-Card.js","components/ECards.js","components/FCards.js","pages/E-card.js","pages/AllCards.js","pages/NewEcard.js","pages/NewFcard.js","pages/SignUp.js","components/UserCard.js","pages/UsersList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","props","console","log","activeUser","this","handleLogout","recipesMenuItem","href","loginMenuItem","className","signupMenuItem","logoutMenuItem","onClick","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Component","LoginPage","state","emailInput","pwdInput","showInvalidCredentials","redirectToRecipes","login","bind","users","handleLogin","userFound","find","user","email","pwd","setState","to","class","for","type","placeholder","value","onChange","e","target","GuestHomePage","PreviewCard","data","styles","src","img","fname","lname","location","date","from","text","UserHomePage","handleCard","handleToAllCards","cardRoute","event","ECards","FCards","filter","status","length","map","i","onECardSelect","key","onFCardSelect","selected","disabled","hidden","FCardPage","RedirectToNewFCard","handleInput","handleImage","firstname","lastname","phone","feedingTime","numberOfCats","photo","name","files","URL","createObjectURL","updateNewFcard","ECardPage","RedirectToNewECard","description","catType","catAge","updateNewEcard","rows","maxlength","AllCards","eCardsList","fCardsList","eCardsJson","card","fCardsJson","NewECard","radioInput","React","createRef","current","newECardData","handleStatus","alt","ref","defaultChecked","NewFCard","newFCardData","SignUp","handleSignUpSubmit","updateUserCards","history","push","withRouter","UserCard","UsersList","userCards","searchText","searchTypeRadio","handleSearch","handleRadio","str","usersJson","toLowerCase","includes","App","jsonUsers","handleStatusEcard","handleStatusFcard","temp","ECardIndex","tempArr","forEach","cardItem","index","indexOf","FCardIndex","exact","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.413f267c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"preview-card\":\"PreviewCard_preview-card__3Elyp\",\"img-cont\":\"PreviewCard_img-cont__3r6BR\"};","import React, { Component } from \"react\";\r\nimport \"./Navbar.css\";\r\nimport {\r\n  Navbar as BSNavbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    console.log(this.props.activeUser);\r\n  }\r\n\r\n  render() {\r\n    const { activeUser, handleLogout } = this.props;\r\n\r\n    const recipesMenuItem = activeUser ? (\r\n      <>\r\n        <li>\r\n          <a href=\"#cards\">Cards</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#users-list\">Users List</a>\r\n        </li>\r\n      </>\r\n    ) : null;\r\n    const loginMenuItem = !activeUser ? (\r\n      <li className=\"right\">\r\n        <a href=\"#login\">Login</a>\r\n      </li>\r\n    ) : null;\r\n    const signupMenuItem = !activeUser ? (\r\n      <li className=\"right\">\r\n        <a href=\"#signup\">Sighup</a>\r\n      </li>\r\n    ) : null;\r\n    // const logoutMenuItem = activeUser ? <li className=\"right\"><a href=\"#login\">Logout</a></li> : null;\r\n    const logoutMenuItem = activeUser ? (\r\n      <li className=\"right\">\r\n        <a\r\n          onClick={() => {\r\n            handleLogout();\r\n          }}\r\n          href=\"#\"\r\n        >\r\n          Logout\r\n        </a>\r\n      </li>\r\n    ) : null;\r\n\r\n    return (\r\n      <BSNavbar className=\"navbar-main\" expand=\"lg\">\r\n        <BSNavbar.Brand href=\"#/\" className=\"logo-title\">\r\n          Street Cat\r\n        </BSNavbar.Brand>\r\n        <BSNavbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <BSNavbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto justify-content-end\">{recipesMenuItem}</Nav>\r\n          <Nav className=\"ml-auto justify-content-end\">{loginMenuItem} </Nav>\r\n          <Nav>\r\n            {\" \"}\r\n            {signupMenuItem}\r\n            {logoutMenuItem}\r\n          </Nav>\r\n        </BSNavbar.Collapse>\r\n      </BSNavbar>\r\n\r\n      // <div className=\"new-navbar\">\r\n      //     <ul className=\"topnav\">\r\n      //         <li>\r\n      //             <Link  className=\"active\" to=\"/\">\r\n      //                 <a>Cat App</a>\r\n      //             </Link>\r\n      //         </li>\r\n\r\n      //         {recipesMenuItem}\r\n      //         {loginMenuItem}\r\n      //         {signupMenuItem}\r\n      //         {logoutMenuItem}\r\n\r\n      //     </ul>\r\n      // </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport \"./loginPage.css\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nclass LoginPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      emailInput: \"\",\r\n      pwdInput: \"\",\r\n      showInvalidCredentials: false,\r\n      redirectToRecipes: false,\r\n    };\r\n\r\n    this.login = this.login.bind(this);\r\n\r\n    console.log(this.props.users);\r\n  }\r\n\r\n  login() {\r\n    const { emailInput, pwdInput } = this.state;\r\n    const { users, handleLogin } = this.props;\r\n\r\n    const userFound = users.find(\r\n      (user) => emailInput === user.email && pwdInput === user.pwd\r\n    );\r\n\r\n    if (userFound) {\r\n      handleLogin(userFound);\r\n      this.setState({\r\n        redirectToRecipes: true,\r\n      });\r\n      // alert(\"found\");\r\n    } else {\r\n      this.setState({\r\n        showInvalidCredentials: true,\r\n      });\r\n      // alert(\"not found\");\r\n    }\r\n\r\n    // alert(emailInput + \" \" + pwdInput)\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      emailInput,\r\n      pwdInput,\r\n      showInvalidCredentials,\r\n      redirectToRecipes,\r\n    } = this.state;\r\n    const { activeUser, handleLogout } = this.props;\r\n    if (redirectToRecipes) {\r\n      return <Redirect to=\"/home\" />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Navbar activeUser={activeUser} handleLogout={handleLogout} />\r\n        <div className=\"login-wrapper\">\r\n          <div className=\"login-container\">\r\n            <h2>Login to Street Cat</h2>\r\n            <div>\r\n              or<Link to=\"/signup\"> Create a new account</Link>\r\n            </div>\r\n\r\n            <form className=\"loginForm\">\r\n              {showInvalidCredentials ? (\r\n                <div class=\"alert\">\r\n                  <div>Incorrect email or password!</div>\r\n                </div>\r\n              ) : null}\r\n\r\n              <div className=\"login-inp-container\">\r\n                <label for=\"exampleInputEmail1\">Email address</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"exampleInputEmail1\"\r\n                  placeholder=\"example@gmail.com\"\r\n                  value={emailInput}\r\n                  onChange={(e) =>\r\n                    this.setState({\r\n                      emailInput: e.target.value,\r\n                      showInvalidCredentials: false,\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"login-inp-container\">\r\n                <label for=\"exampleInputPassword1\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"exampleInputPassword1\"\r\n                  placeholder=\"******\"\r\n                  value={pwdInput}\r\n                  onChange={(e) => this.setState({ pwdInput: e.target.value })}\r\n                />\r\n              </div>\r\n              {/* <label for=\"exampleInputFile\">File input</label>\r\n                        <input type=\"file\" id=\"exampleInputFile\"/>\r\n                        <input type=\"checkbox\" id=\"CheckMe\"/>\r\n                        <label for=\"CheckMe\">I agree to receive information about Canonical’s products and services.</label> */}\r\n              <div className=\"login-btn-container\">\r\n                <button\r\n                  className=\"login-btn\"\r\n                  onClick={this.login}\r\n                  type=\"button\"\r\n                >\r\n                  Log in\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport \"./GuestHomePage.css\";\r\n\r\nclass GuestHomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { activeUser, handleLogout } = this.props;\r\n    if (!activeUser) {\r\n      return (\r\n        <div>\r\n          <Navbar activeUser={activeUser} handleLogout={handleLogout} />\r\n\r\n          <div className=\"test\">\r\n            <div className=\"GuestHomePage\">\r\n              <h1>STREET CAT</h1>\r\n\r\n              <Link to=\"/signup\">\r\n                <button>Join Us</button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return <Redirect to=\"/home\" />;\r\n  }\r\n}\r\n\r\nexport default GuestHomePage;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./PreviewCard.module.css\";\r\n\r\nclass PreviewCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { data, type } = this.props;\r\n    // this.props.data\r\n    return (\r\n      <div className={styles[\"preview-card\"]} {...this.props}>\r\n        <div className={styles[\"img-cont\"]}>\r\n          <img src={data.img} />\r\n        </div>\r\n        <div className={styles[\"data-container\"]}>\r\n          <h3>\r\n            {type === \"e\" ? (\r\n              <>\r\n                <span>Trap a Cat </span>\r\n              </>\r\n            ) : type === \"f\" ? (\r\n              <span>Shift Change in Feeding Station</span>\r\n            ) : null}\r\n          </h3>\r\n          <p>\r\n            Name: {data.fname} {data.lname}\r\n          </p>\r\n          <p>Location: {data.location} </p>\r\n          {type === \"e\" ? (\r\n            <>\r\n              <p>Date: {data.date} </p>\r\n            </>\r\n          ) : type === \"f\" ? (\r\n            <>\r\n              <p>Date From: {data.from} </p>\r\n              <p>Date To:{data.to}</p>\r\n            </>\r\n          ) : null}\r\n          <p> {data.text}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PreviewCard;\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport PreviewCard from \"../components/PreviewCard\";\r\nimport eCardsJson from \"../data/eCards.json\";\r\nimport \"./UserHomePage.css\";\r\n\r\nclass UserHomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleCard = this.handleCard.bind(this);\r\n    this.handleToAllCards = this.handleToAllCards.bind(this);\r\n    this.state = {\r\n      cardRoute: \"\",\r\n    };\r\n  }\r\n  handleCard(event) {\r\n    this.setState({ ...this.state, cardRoute: event.target.value });\r\n  }\r\n  handleToAllCards() {\r\n    this.setState({ ...this.state, cardRoute: \"allCards\" });\r\n  }\r\n\r\n  render() {\r\n    const { activeUser, handleLogout, ECards, FCards } = this.props;\r\n\r\n    if (!activeUser) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    switch (this.state.cardRoute) {\r\n      case \"E\":\r\n        return <Redirect to=\"/e-card\" />;\r\n      case \"F\":\r\n        return <Redirect to=\"/f-card\" />;\r\n      default:\r\n        break;\r\n    }\r\n    return (\r\n      <div>\r\n        <Navbar activeUser={activeUser} handleLogout={handleLogout} />\r\n        <div className=\"user-home-container\">\r\n          {ECards.filter((data) => data.status === \"open\").length > 0 ||\r\n          FCards.filter((data) => data.status === \"open\").length > 0 ? (\r\n            <h2>Open Cards</h2>\r\n          ) : null}\r\n          <div className=\"PreviewCards\">\r\n            {ECards.filter((data) => data.status === \"open\").map((data, i) => {\r\n              return (\r\n                <PreviewCard\r\n                  onClick={() => {\r\n                    this.props.onECardSelect(data);\r\n                  }}\r\n                  key={i}\r\n                  data={data}\r\n                  type=\"e\"\r\n                />\r\n              );\r\n            })}\r\n            {FCards.filter((data) => data.status === \"open\").map((data, i) => {\r\n              return (\r\n                <PreviewCard\r\n                  onClick={() => {\r\n                    this.props.onFCardSelect(data);\r\n                  }}\r\n                  key={i}\r\n                  data={data}\r\n                  type=\"f\"\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          <div className=\"user-home-btn-container\">\r\n            <Link to=\"/cards\">\r\n              <button className=\"all-cards-btn\">All Cards</button>\r\n            </Link>\r\n            <select\r\n              id=\"new-card\"\r\n              className=\"new-card-btn\"\r\n              onChange={this.handleCard}\r\n            >\r\n              <option selected disabled hidden>\r\n                Open a New card\r\n              </option>\r\n              <option value=\"E\">Trap a Cat</option>\r\n              <option value=\"F\">Shift Change in Feeding Station</option>\r\n              <option value=\"G\">Foster Home Needed</option>\r\n              <option value=\"H\">Medicine Needed</option>\r\n              <option value=\"I\">Equipment Needed</option>\r\n              <option value=\"J\">Other</option>\r\n            </select>\r\n\r\n            <Link to=\"/users-list\" className=\"link\">\r\n              <button className=\"user-list-btn\">Users List</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserHomePage;\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./F-card.css\";\r\n\r\nclass FCardPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.RedirectToNewFCard = this.RedirectToNewFCard.bind(this);\r\n    this.handleInput = this.handleInput.bind(this);\r\n    this.handleImage = this.handleImage.bind(this);\r\n    this.state = {\r\n      cardRoute: \"\",\r\n      type: \"\",\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      location: \"\",\r\n      phone: \"\",\r\n      from: \"\",\r\n      to: \"\",\r\n      feedingTime: \"\",\r\n      numberOfCats: \"\",\r\n      text: \"\",\r\n      photo: \"\",\r\n      status: \"open\",\r\n    };\r\n  }\r\n  handleInput(event) {\r\n    console.log(event.target.value);\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n  handleImage(event) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      this.setState({\r\n        photo: URL.createObjectURL(event.target.files[0]),\r\n      });\r\n    }\r\n  }\r\n\r\n  RedirectToNewFCard() {\r\n    //function to callect all the data we entered\r\n    const data = {\r\n      type: this.state.type,\r\n      fname: this.state.firstname,\r\n      lname: this.state.lastname,\r\n      location: this.state.location,\r\n      phone: this.state.phone,\r\n      from: this.state.from,\r\n      to: this.state.to,\r\n      \"feeding-time\": this.state.feedingTime,\r\n      \"number-of-cats\": this.state.numberOfCats,\r\n      text: this.state.text,\r\n      img: this.state.photo,\r\n      status: this.state.status,\r\n    };\r\n    this.props.updateNewFcard(data);\r\n    this.setState({ ...this.state, cardRoute: \"newFCard\" });\r\n  }\r\n\r\n  render() {\r\n    const { activeUser, handleLogout } = this.props;\r\n    switch (this.state.cardRoute) {\r\n      case \"newFCard\":\r\n        return <Redirect to=\"/new-f-card\" />;\r\n      default:\r\n        break;\r\n    }\r\n    if (!activeUser) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div id=\"fcard\">\r\n        <Navbar activeUser={activeUser} handleLogout={handleLogout} />\r\n\r\n        <div className=\"f-wrapper\">\r\n          <div className=\"contact-form\">\r\n            <div className=\"form-title2\">\r\n              <h2>Shift Change in Feeding station</h2>\r\n            </div>\r\n            <div className=\"fcard-main\">\r\n              <div className=\"input-fields\">\r\n                <label for=\"other\">First Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input\"\r\n                  placeholder=\"\"\r\n                  onChange={this.handleInput}\r\n                  name=\"firstname\"\r\n                />\r\n                <label for=\"other\">Last Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input\"\r\n                  placeholder=\"\"\r\n                  onChange={this.handleInput}\r\n                  name=\"lastname\"\r\n                />\r\n                <label for=\"other\">Location</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input\"\r\n                  placeholder=\"\"\r\n                  onChange={this.handleInput}\r\n                  name=\"location\"\r\n                />\r\n                <label for=\"other\">Phone</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input\"\r\n                  placeholder=\"\"\r\n                  onChange={this.handleInput}\r\n                  name=\"phone\"\r\n                />\r\n                <label for=\"other\">From</label>\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"input\"\r\n                  placeholder=\"\"\r\n                  onChange={this.handleInput}\r\n                  name=\"from\"\r\n                />\r\n                <label for=\"other\">To</label>\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"input\"\r\n                  placeholder=\"\"\r\n                  onChange={this.handleInput}\r\n                  name=\"to\"\r\n                />\r\n                <label for=\"other\">Feeding Time</label>\r\n                <input\r\n                  type=\"time\"\r\n                  className=\"input\"\r\n                  placeholder=\"\"\r\n                  onChange={this.handleInput}\r\n                  name=\"feedingTime\"\r\n                />\r\n                <label for=\"other\">Number of cats</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input\"\r\n                  placeholder=\"\"\r\n                  onChange={this.handleInput}\r\n                  name=\"numberOfCats\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"msg\">\r\n                <label for=\"other\">Enter your msg</label>\r\n                <textarea\r\n                  placeholder=\"Enter your msg here...\"\r\n                  name=\"text\"\r\n                  onChange={this.handleInput}\r\n                ></textarea>\r\n                <div>\r\n                  <label for=\"exampleInputFile\">Add Photo</label>\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"InputFile2\"\r\n                    onChange={this.handleImage}\r\n                  />\r\n                </div>\r\n                {/* <div className=\"btn\">Send</div> */}\r\n                <button className=\"f-btn\" onClick={this.RedirectToNewFCard}>\r\n                  Send\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FCardPage;\r\n","import React, { Component } from \"react\";\r\nimport \"./ECards.css\";\r\n\r\nclass ECards extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { data } = this.props;\r\n    // this.props.data\r\n    return (\r\n      // <div className=\"e-card-wrapper\" >\r\n      <div className=\"ecards-container\" {...this.props}>\r\n        <div className=\"ecard-card\">\r\n          <div className=\"imgBx\">\r\n            <img src={data.img} />\r\n          </div>\r\n          <div className=\"ecard-content\">\r\n            <h3>Cat Catcher Needed</h3>\r\n            <p>\r\n              Name: {data.fname} {data.lname}\r\n            </p>\r\n            <p>Location: {data.location} </p>\r\n            <p>Date: {data.date} </p>\r\n            <p>Cat Age:{data[\"cat-age\"]}</p>\r\n            <p>Cat Type:{data[\"cat-type\"]}</p>\r\n            <p>Card status:{data.status}</p>\r\n            <p>Phone:{data.phone}</p>\r\n            <p> {data.text}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      // </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ECards;\r\n","import React, { Component } from \"react\";\r\nimport \"./FCards.css\";\r\n\r\nclass FCards extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { data } = this.props;\r\n    // this.props.data\r\n    return (\r\n      <div className=\"fcards-container\" {...this.props}>\r\n        <div className=\"fcard-card\">\r\n          <div className=\"imgBx\">\r\n            <img src={data.img} />\r\n          </div>\r\n          <div className=\"fcard-content\">\r\n            <h3>Shift Change in Feeding station</h3>\r\n            <p>\r\n              Name: {data.fname} {data.lname}\r\n            </p>\r\n            <p>Location: {data.location} </p>\r\n            <p>From: {data.from} </p>\r\n            <p>To: {data.to} </p>\r\n            <p>Feeding Time:{data[\"feeding-time\"]}</p>\r\n            <p>Number of Cats:{data[\"number-of-cats\"]}</p>\r\n            <p>Phone:{data.phone}</p>\r\n            <p> {data.text}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FCards;\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./E-card.css\";\r\n\r\nclass ECardPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.RedirectToNewECard = this.RedirectToNewECard.bind(this);\r\n    this.handleInput = this.handleInput.bind(this);\r\n    this.handleImage = this.handleImage.bind(this);\r\n    this.state = {\r\n      cardRoute: \"\",\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      location: \"\",\r\n      phone: \"\",\r\n      date: \"\",\r\n      description: \"\",\r\n      catType: \"\",\r\n      catAge: \"\",\r\n      photo: \"\",\r\n      status: \"open\",\r\n    };\r\n  }\r\n\r\n  handleInput(event) {\r\n    console.log(event.target.value);\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n  handleImage(event) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      this.setState({\r\n        photo: URL.createObjectURL(event.target.files[0]),\r\n      });\r\n    }\r\n  }\r\n\r\n  RedirectToNewECard() {\r\n    //function to callect all the data we entered\r\n    const data = {\r\n      fname: this.state.firstname,\r\n      lname: this.state.lastname,\r\n      location: this.state.location,\r\n      phone: this.state.phone,\r\n      date: this.state.date,\r\n      text: this.state.description,\r\n      \"cat-age\": this.state.catAge,\r\n      \"cat-type\": this.state.catType,\r\n      img: this.state.photo,\r\n      status: this.state.status,\r\n    };\r\n    this.props.updateNewEcard(data);\r\n    this.setState({ ...this.state, cardRoute: \"newECard\" });\r\n  }\r\n  render() {\r\n    const { activeUser, handleLogout } = this.props;\r\n    switch (this.state.cardRoute) {\r\n      case \"newECard\":\r\n        return <Redirect to=\"/new-e-card\" />;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (!activeUser) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div>\r\n        <Navbar activeUser={activeUser} handleLogout={handleLogout} />\r\n        <div>\r\n          <div className=\"contact-form\">\r\n            <div className=\"form-title\">\r\n              <h2>Trap a cat</h2>\r\n            </div>\r\n            <form>\r\n              <div className=\"input-fields\">\r\n                <label for=\"other\">First Name</label>\r\n                <input\r\n                  type=\"rext\"\r\n                  name=\"firstname\"\r\n                  onChange={this.handleInput}\r\n                />\r\n\r\n                <label>Last Name</label>\r\n                <input\r\n                  type=\"rext\"\r\n                  name=\"lastname\"\r\n                  onChange={this.handleInput}\r\n                />\r\n\r\n                <label>Location</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"location\"\r\n                  onChange={this.handleInput}\r\n                />\r\n\r\n                {/* <label >Email</label>\r\n                                <input type=\"email\" name=\"email\"/> */}\r\n\r\n                <label>Phone</label>\r\n                <input type=\"numper\" name=\"phone\" onChange={this.handleInput} />\r\n\r\n                <label>Date</label>\r\n                <input type=\"date\" name=\"date\" onChange={this.handleInput} />\r\n\r\n                {/* <input id=\"description\" type=\"text\" name=\"description\"/> */}\r\n              </div>\r\n\r\n              {/* <label >Subject</label>\r\n                            <select className=\"option\" name=\"subject\">\r\n                                <option disabled=\"disabled\" selected=\"selected\" value=\"\">Choose option</option>\r\n                                <option value=\"\">Subject 1</option>\r\n                                <option value=\"\">Subject 2</option>\r\n                                <option value=\"\">Subject 3</option>\r\n                            </select> */}\r\n              <div className=\"description-container\">\r\n                <label>Description</label>\r\n                <textarea\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  rows=\"5\"\r\n                  maxlength=\"370\"\r\n                  onChange={this.handleInput}\r\n                ></textarea>\r\n              </div>\r\n              <div className=\"radio-main\">\r\n                <p>Cat Age</p>\r\n                <div\r\n                  id=\"cat-age\"\r\n                  className=\"cat-radio\"\r\n                  onChange={this.handleInput}\r\n                >\r\n                  <label>Adult</label>\r\n                  <input type=\"radio\" id=\"adult\" name=\"catAge\" value=\"adult\" />\r\n                  <label>Kitten</label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    id=\"kitten\"\r\n                    name=\"catAge\"\r\n                    value=\"kitten\"\r\n                  />\r\n                  <label>unknown</label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    id=\"unknown\"\r\n                    name=\"catAge\"\r\n                    value=\"unknown\"\r\n                  />\r\n                </div>\r\n\r\n                <p>Cat Type</p>\r\n                <div\r\n                  id=\"cat-type\"\r\n                  className=\"cat-radio\"\r\n                  onChange={this.handleInput}\r\n                >\r\n                  <label>Feral cat</label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    id=\"Feral cat\"\r\n                    name=\"catType\"\r\n                    value=\"Feral cat\"\r\n                  />\r\n                  <label>House cat</label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    id=\"house cat\"\r\n                    name=\"catType\"\r\n                    value=\"house cat\"\r\n                  />\r\n                  <label>unknown</label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    id=\"unknown\"\r\n                    name=\"catType\"\r\n                    value=\"unknown\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"add-file\">Add Photo</label>\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"InputFile\"\r\n                    name=\"photo\"\r\n                    onChange={this.handleImage}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <button\r\n              className=\"btn-main\"\r\n              type=\"button\"\r\n              onClick={this.RedirectToNewECard}\r\n            >\r\n              Send\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ECardPage;\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport eCardsJson from \"../data/eCards.json\";\r\nimport ECards from \"../components/ECards\";\r\nimport FCards from \"../components/FCards\";\r\nimport fCardsJson from \"../data/fCards.json\";\r\nimport \"./AllCards.css\";\r\nimport ECardPage from \"./E-card\";\r\n\r\nclass AllCards extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      activeUser,\r\n      handleLogout,\r\n      ECards: eCardsList,\r\n      FCards: fCardsList,\r\n    } = this.props;\r\n\r\n    // if (!activeUser) {\r\n    //     return <Redirect to=\"/\"/>\r\n    // }\r\n\r\n    return (\r\n      <div>\r\n        <Navbar activeUser={activeUser} handleLogout={handleLogout} />\r\n        {/* <div>\r\n                All Cards Page\r\n                </div> */}\r\n        <div className=\"cards-container\">\r\n          {eCardsJson.map((card) => {\r\n            return <ECards key={card.id} data={card} />;\r\n          })}\r\n          {fCardsJson.map((card) => {\r\n            return <FCards key={card.id} data={card} />;\r\n          })}\r\n          {eCardsList.map((card, i) => {\r\n            return (\r\n              <ECards\r\n                key={card.name + i}\r\n                data={card}\r\n                onClick={() => this.props.onECardSelect(card)}\r\n              />\r\n            );\r\n          })}\r\n          {fCardsList.map((card, i) => {\r\n            return (\r\n              <FCards\r\n                key={card.name + i}\r\n                data={card}\r\n                onClick={() => this.props.onFCardSelect(card)}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllCards;\r\n","import React, { Component } from \"react\";\r\nimport \"./NewEcard.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar\";\r\nclass NewECard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.radioInput = React.createRef();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(this.radioInput.current.value);\r\n  }\r\n  render() {\r\n    const { activeUser, handleLogout, newECardData, handleStatus } = this.props;\r\n    console.log(this.props);\r\n    if (!newECardData) {\r\n      return <Redirect to=\"/e-card\" />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Navbar activeUser={activeUser} handleLogout={handleLogout} />\r\n        <div className=\"newEContainer\">\r\n          <h2>Trap A Cat</h2>\r\n          <div className=\"new-e-card-container\">\r\n            <div className=\"new-e-first-col\">\r\n              <label>First Name: {newECardData.fname}</label>\r\n              <label>Last Name: {newECardData.lname}</label>\r\n              <label>Location:{newECardData.location}</label>\r\n              <label>Phone:{newECardData.phone}</label>\r\n              <label>Date:{newECardData.date}</label>\r\n              <label>Text:{newECardData.text}</label>\r\n              <label>Cat Age: {newECardData[\"cat-age\"]}</label>\r\n              <label> Cat Type: {newECardData[\"cat-type\"]} </label>\r\n            </div>\r\n            <div className=\"new-e-second-col\">\r\n              <img src={newECardData.img} alt=\"image\" />\r\n              <div\r\n                className=\"status\"\r\n                onChange={(event) =>\r\n                  handleStatus(event.target.value, newECardData)\r\n                }\r\n                ref={this.radioInput}\r\n              >\r\n                <h3>Status</h3>\r\n                <br />\r\n                <label>Open</label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"status\"\r\n                  value=\"open\"\r\n                  id=\"open\"\r\n                  defaultChecked={newECardData.status === \"open\"}\r\n                />\r\n                <label>Active</label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"status\"\r\n                  value=\"active\"\r\n                  id=\"active\"\r\n                  defaultChecked={newECardData.status === \"active\"}\r\n                />\r\n                <label>Closed</label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"status\"\r\n                  value=\"closed\"\r\n                  id=\"closed\"\r\n                  defaultChecked={newECardData.status === \"closed\"}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewECard;\r\n","import React, { Component } from \"react\";\r\nimport \"./NewFcard.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar\";\r\nclass NewFCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { activeUser, handleLogout, newFCardData, handleStatus } = this.props;\r\n    console.log(this.props);\r\n    if (!newFCardData) {\r\n      return <Redirect to=\"/f-card\" />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Navbar activeUser={activeUser} handleLogout={handleLogout} />\r\n        <div className=\"newFContainer\">\r\n          <h2>Shift Change In Feeding Station</h2>\r\n          <div className=\"new-f-card-container\">\r\n            <div className=\"new-f-first-col\">\r\n              <label>First Name: {newFCardData.fname}</label>\r\n              <label>last Name: {newFCardData.lname}</label>\r\n              <label>Location:{newFCardData.location}</label>\r\n              <label>Phone:{newFCardData.phone}</label>\r\n              <label>From:{newFCardData.from}</label>\r\n              <label>To:{newFCardData.to}</label>\r\n              <label>Feeding Time:{newFCardData[\"feeding-time\"]}</label>\r\n              <label>Number of Cats:{newFCardData[\"number-of-cats\"]}</label>\r\n              <label>Text:{newFCardData.text}</label>\r\n            </div>\r\n            <div className=\"new-f-second-col\">\r\n              <img src={newFCardData.img} alt=\"image\" />\r\n              <div\r\n                className=\"status\"\r\n                onChange={(event) =>\r\n                  handleStatus(event.target.value, newFCardData)\r\n                }\r\n                ref={this.radioInput}\r\n              >\r\n                <h3>Status</h3>\r\n                <br />\r\n                <label>Open</label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"status\"\r\n                  value=\"open\"\r\n                  defaultChecked={newFCardData.status === \"open\"}\r\n                  id=\"open\"\r\n                />\r\n                <label>Active</label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"status\"\r\n                  value=\"active\"\r\n                  defaultChecked={newFCardData.status === \"active\"}\r\n                  id=\"active\"\r\n                />\r\n                <label>Closed</label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"status\"\r\n                  value=\"closed\"\r\n                  defaultChecked={newFCardData.status === \"closed\"}\r\n                  id=\"closed\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewFCard;\r\n","import React, { Component } from \"react\";\r\nimport \"./SignUp.css\";\r\nimport { Redirect, Link, withRouter } from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nclass SignUp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fname: \"\",\r\n      lname: \"\",\r\n      pwd: \"\",\r\n      img: \"\",\r\n      email: \"\",\r\n      type: \"\",\r\n      location: \"\",\r\n      showInvalidCredentials: false,\r\n    };\r\n    this.handleInput = this.handleInput.bind(this);\r\n    this.handleImage = this.handleImage.bind(this);\r\n    this.handleSignUpSubmit = this.handleSignUpSubmit.bind(this);\r\n  }\r\n  handleInput(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n    if (event.target.name == \"type\") {\r\n      console.log(\"type\", event.target.value);\r\n    }\r\n  }\r\n\r\n  handleImage(event) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      this.setState({\r\n        img: URL.createObjectURL(event.target.files[0]),\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSignUpSubmit() {\r\n    if (this.state.email == \"\" || this.state.pwd == \"\") {\r\n      this.setState({ showInvalidCredentials: true });\r\n    } else {\r\n      const data = {\r\n        fname: this.state.fname,\r\n        lname: this.state.lname,\r\n        email: this.state.email,\r\n        pwd: this.state.pwd,\r\n        img: this.state.img,\r\n        type: this.state.type,\r\n        location: this.state.location,\r\n      };\r\n      this.props.updateUserCards(data);\r\n      this.props.history.push(\"/login\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { activeUser, handleLogout } = this.props;\r\n    if (activeUser) {\r\n      return <Redirect to=\"/home\" />;\r\n    }\r\n    return (\r\n      <div>\r\n        <Navbar activeUser={activeUser} handleLogout={handleLogout} />\r\n        <div className=\"signup-wrapper\">\r\n          <div className=\"signup-container\">\r\n            <h2>Sign Up</h2>\r\n            {this.state.showInvalidCredentials ? (\r\n              <div className=\"alert\">\r\n                <div>Please Enter email and password!</div>\r\n              </div>\r\n            ) : null}\r\n            <div className=\"inp-container\">\r\n              <label>First Name</label>\r\n              <input name=\"fname\" type=\"text\" onChange={this.handleInput} />\r\n            </div>\r\n            <div className=\"inp-container\">\r\n              <label>Last Name</label>\r\n              <input name=\"lname\" type=\"text\" onChange={this.handleInput} />\r\n            </div>\r\n            <div className=\"inp-container\">\r\n              <label>Location</label>\r\n              <input name=\"location\" type=\"text\" onChange={this.handleInput} />\r\n            </div>\r\n            <div className=\"inp-container\">\r\n              <label>Email</label>\r\n              <input name=\"email\" type=\"email\" onChange={this.handleInput} />\r\n            </div>\r\n            <div className=\"inp-container\">\r\n              <label>Password</label>\r\n              <input name=\"pwd\" type=\"password\" onChange={this.handleInput} />\r\n            </div>\r\n            <div className=\"inp-container\">\r\n              <label>Image</label>\r\n              <input\r\n                className=\"img-input\"\r\n                name=\"img\"\r\n                type=\"file\"\r\n                onChange={this.handleImage}\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              id=\"user-type\"\r\n              className=\"user-radio\"\r\n              onChange={this.handleInput}\r\n            >\r\n              <h5>Main Activity</h5>\r\n              <input type=\"radio\" id=\"feeder\" name=\"type\" value=\"feeder\" />\r\n              <label for=\"Feral cat\">Cat-Feeder</label>\r\n              <input\r\n                type=\"radio\"\r\n                id=\"Cat-Catcher\"\r\n                name=\"type\"\r\n                value=\"Cat-Catcher\"\r\n              />\r\n              <label for=\"house cat\">Cat-Catcher</label>\r\n              <input\r\n                type=\"radio\"\r\n                id=\"Cat-carer\"\r\n                name=\"type\"\r\n                value=\"Cat-carer\"\r\n              />\r\n              <label for=\"other\">Cat-Foster</label>\r\n            </div>\r\n\r\n            <button className=\"signup-btn\" onClick={this.handleSignUpSubmit}>\r\n              OK\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SignUp);\r\n","import React, { Component } from 'react';\r\nimport './UserCard.css'\r\n\r\nclass UserCard extends Component {\r\n    render() {\r\n        const {user}=this.props\r\n        return (\r\n            <div className='user-card-container'>\r\n              <label>Name: {user.fname} {user.lname}</label> \r\n              <label>Location: {user.location}</label>   \r\n              <label>E-Mail: {user.email}</label>  \r\n              <label>Main Activity: {user.type}</label> \r\n              \r\n              <div>\r\n                  <img src={user.img} alt=\"\"/>\r\n              </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserCard;","import React, { Component } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./UsersList.css\";\r\nimport usersJson from \"../data/users.json\";\r\nimport UserCard from \"../components/UserCard\";\r\n\r\nclass UsersList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userCards: [],\r\n      searchText: \"\",\r\n      searchTypeRadio: null,\r\n    };\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n    this.handleRadio = this.handleRadio.bind(this);\r\n  }\r\n\r\n  handleSearch(event) {\r\n    let str = event.target.value;\r\n    this.setState({ searchText: str });\r\n  }\r\n  handleRadio(event) {\r\n    this.setState({ searchTypeRadio: event.target.value });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState(\r\n      { userCards: [...usersJson, ...this.props.userCards] },\r\n      () => {\r\n        console.log(\"userList state\", this.state.userCards);\r\n      }\r\n    );\r\n  }\r\n  render() {\r\n    const { activeUser, handleLogout, userCards } = this.props;\r\n    console.log(\"userCards\", userCards);\r\n\r\n    if (!activeUser) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"test6\">\r\n        <Navbar activeUser={activeUser} handleLogout={handleLogout} />\r\n        <div className=\"user-list-main\">\r\n          <div className=\"filter-user-list\">\r\n            <input\r\n              type=\"text\"\r\n              onChange={this.handleSearch}\r\n              placeholder=\"Search User\"\r\n            />\r\n            <div className=\"user-radio-container\" onChange={this.handleRadio}>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"searchTypeRadio\"\r\n                defaultChecked={true}\r\n                value={null}\r\n              />\r\n              <label>All</label>\r\n\r\n              <input type=\"radio\" name=\"searchTypeRadio\" value=\"feeder\" />\r\n              <label>Cat-Feeder</label>\r\n\r\n              <input type=\"radio\" name=\"searchTypeRadio\" value=\"Cat-Catcher\" />\r\n              <label>Cat-Catcher</label>\r\n\r\n              <input type=\"radio\" name=\"searchTypeRadio\" value=\"Cat-Foster\" />\r\n              <label>Cat-Foster</label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"users-container\">\r\n            {this.state.userCards\r\n              .filter((user) => {\r\n                if (\r\n                  user.fname\r\n                    .toLowerCase()\r\n                    .includes(this.state.searchText.toLowerCase())\r\n                ) {\r\n                  if (!this.state.searchTypeRadio) {\r\n                    return true;\r\n                  }\r\n                  if (user.type === this.state.searchTypeRadio) return true;\r\n                }\r\n              })\r\n              .map((user, i) => {\r\n                return <UserCard key={user.fname + i} user={user} />;\r\n              })}\r\n            {/*   {\r\n                      userCards.map((user,i)=>{\r\n                        return <UserCard key={user.name+i} user={user}/> \r\n                      })\r\n                  }  */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UsersList;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport LoginPage from \"./pages/loginPage\";\nimport GuestHomePage from \"./pages/GuestHomePage\";\nimport jsonUsers from \"./data/users.json\";\nimport UserHomePage from \"./pages/UserHomePage\";\nimport FCardPage from \"./pages/F-Card\";\nimport AllCards from \"./pages/AllCards\";\nimport ECardPage from \"./pages/E-card\";\nimport NewECard from \"./pages/NewEcard\";\nimport NewFCard from \"./pages/NewFcard\";\nimport SignUp from \"./pages/SignUp\";\nimport UsersList from \"./pages/UsersList\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeUser: null,\n      activeUser: {\n        id: 1234,\n        fname: \"John\",\n        lname: \"Doe\",\n      },\n      users: jsonUsers,\n      route: \"\",\n      ECards: [],\n      FCards: [],\n      userCards: [],\n      ECardIndex: 0,\n      FCardIndex: 0,\n    };\n\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.updateUserCards = this.updateUserCards.bind(this);\n\n    this.handleStatusEcard = this.handleStatusEcard.bind(this);\n    this.updateNewEcard = this.updateNewEcard.bind(this);\n    this.onECardSelect = this.onECardSelect.bind(this);\n\n    this.handleStatusFcard = this.handleStatusFcard.bind(this);\n    this.updateNewFcard = this.updateNewFcard.bind(this);\n    this.onFCardSelect = this.onFCardSelect.bind(this);\n  }\n\n  handleLogin(activeUser) {\n    this.setState({\n      activeUser: activeUser,\n    });\n  }\n\n  handleLogout() {\n    this.setState({\n      activeUser: null,\n    });\n  }\n  updateUserCards(data) {\n    const temp = [...this.state.userCards, data];\n    console.log(temp);\n    this.setState({ userCards: temp, users: [...this.state.users, ...temp] });\n  }\n\n  /* For E cards */\n  updateNewEcard(data) {\n    const temp = [...this.state.ECards, data];\n    this.setState({ ECards: temp, ECardIndex: temp.length - 1 });\n  }\n  handleStatusEcard(status, card) {\n    let tempArr = [...this.state.ECards];\n    tempArr.forEach((cardItem) => {\n      if (card == cardItem) {\n        cardItem.status = status;\n      }\n    });\n    this.setState({ ECards: tempArr });\n  }\n\n  onECardSelect(card) {\n    let index = this.state.ECards.indexOf(card);\n    this.setState({ ECardIndex: index });\n    this.props.history.push(\"/new-e-card\");\n  }\n\n  /* For F Cards */\n  updateNewFcard(data) {\n    const temp = [...this.state.FCards, data];\n    this.setState({ FCards: temp, FCardIndex: temp.length - 1 });\n  }\n  handleStatusFcard(status, card) {\n    let tempArr = [...this.state.FCards];\n    tempArr.forEach((cardItem) => {\n      if (card == cardItem) {\n        cardItem.status = status;\n      }\n    });\n    this.setState({ FCards: tempArr });\n  }\n\n  onFCardSelect(card) {\n    let index = this.state.FCards.indexOf(card);\n    this.setState({ FCardIndex: index });\n    this.props.history.push(\"/new-f-card\");\n  }\n\n  render() {\n    const { activeUser, users } = this.state;\n\n    return (\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n            <GuestHomePage\n              activeUser={activeUser}\n              handleLogout={this.handleLogout}\n            />\n          </Route>\n          <Route exact path=\"/home\">\n            <UserHomePage\n              activeUser={activeUser}\n              handleLogout={this.handleLogout}\n              ECards={this.state.ECards}\n              onECardSelect={this.onECardSelect}\n              FCards={this.state.FCards}\n              onFCardSelect={this.onFCardSelect}\n            />\n          </Route>\n          <Route exact path=\"/login\">\n            <LoginPage\n              activeUser={activeUser}\n              users={users}\n              handleLogin={this.handleLogin}\n            />\n          </Route>\n          <Route exact path=\"/signup\">\n            <SignUp\n              activeUser={activeUser}\n              handleLogout={this.handleLogout}\n              updateUserCards={this.updateUserCards}\n            />\n          </Route>\n          <Route exact path=\"/cards\">\n            <AllCards\n              activeUser={activeUser}\n              handleLogout={this.handleLogout}\n              ECards={this.state.ECards}\n              onECardSelect={this.onECardSelect}\n              FCards={this.state.FCards}\n              onFCardSelect={this.onFCardSelect}\n            />\n          </Route>\n          <Route exact path=\"/e-card\">\n            <ECardPage\n              activeUser={activeUser}\n              handleLogout={this.handleLogout}\n              updateNewEcard={this.updateNewEcard}\n            />\n          </Route>\n          <Route exact path=\"/f-card\">\n            <FCardPage\n              activeUser={activeUser}\n              handleLogout={this.handleLogout}\n              updateNewFcard={this.updateNewFcard}\n            />\n          </Route>\n          <Route exact path=\"/new-e-card\">\n            <NewECard\n              activeUser={activeUser}\n              handleLogout={this.handleLogout}\n              handleStatus={this.handleStatusEcard}\n              newECardData={this.state.ECards[this.state.ECardIndex]}\n            />\n          </Route>\n          <Route exact path=\"/new-f-card\">\n            <NewFCard\n              activeUser={activeUser}\n              handleLogout={this.handleLogout}\n              handleStatus={this.handleStatusFcard}\n              newFCardData={this.state.FCards[this.state.FCardIndex]}\n            />\n          </Route>\n          <Route exact path=\"/users-list\">\n            <UsersList\n              activeUser={activeUser}\n              handleLogout={this.handleLogout}\n              userCards={this.state.userCards}\n            />\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n\n    <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}